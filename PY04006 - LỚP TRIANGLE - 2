from math import sqrt

class Vertex:
    def __init__(self,x,y):
        self.x = x
        self.y = y
    def distance(self,other):
        return sqrt((self.x - other.x)**2 + (self.y - other.y)**2)

class Triangle:
    def __init__(self,p1,p2,p3):
        self.p1 = p1
        self.p2 = p2
        self.p3 = p3
    def is_valid(self):
        a = self.p1.distance(self.p2)
        b = self.p2.distance(self.p3)
        c = self.p3.distance(self.p1)
        return a + b > c and b + c > a and a + c > b
    def perimeter(self):
        a = self.p1.distance(self.p2)
        b = self.p2.distance(self.p3)
        c = self.p3.distance(self.p1)
        return sqrt((a+b+c)*(a+b-c)*(c-a+b)*(a-b+c))/4 

a = []
t = int(input())
for _ in range(t):
    a.extend(list(map(float,input().split())))
n = 0
for x in range(t):
    x1,y1,x2,y2,x3,y3 = map(float,a[n:n+6])
    p1 = Vertex(x1,y1)
    p2 = Vertex(x2,y2)
    p3 = Vertex(x3,y3)
    c = Triangle(p1,p2,p3)
    if not Triangle.is_valid(c):
        print("INVALID")
    else:
        print(f"{Triangle.perimeter(c):.2f}")
    n += 6
